/*
	Eric Eckert
	CSE 414 Spring 16
	Suciu
*/


-- Create table
create table Edges (source integer, destination integer);

-- Insert values
insert into Edges
	values(10, 5);
	
insert into Edges
	values(6, 25);
	
insert into Edges
	values(1, 3);
	
insert into Edges
	values(4, 4);
	
-- Queries

--Return all tuples
select *
from Edges;

--Return only source column
select source
from Edges; 

--Return tuples where source > destination
select *
from Edges
where source > destination;

--Tricky question
insert into Edges
	values('-1', '2000');
	
/*
   Inserting these values does not give an error. Even though the values are text data types 
   and both columns of the table are integer data types. In the documentation, it states that
   "when text data is inserted into a NUMERIC column, the storage class of the text is converted
   to INTEGER or REAL.. if such a conversion is lossless and reversible." In this case it 
   was possible, so the values were converted into integers.
 */

--Create table of restaurants
create table MyRestaurants (
	name varchar(20), 
	food varchar(20), 
	distance integer,
	visited varchar(20),
	good integer
);

--Insert tuples
insert into MyRestaurants 
	values('Orenchi', 'Ramen', 10, '2015-08-10', 1);
	
insert into MyRestaurants 
	values('Smash Burger', 'Burgers', 6, '2015-12-28', 1);
	
insert into MyRestaurants 
	values('Verde', 'Tea Cafe', 12, '2013-12-23', 1);
	
insert into MyRestaurants 
	values('Mango Garden', 'Thai', 2, '2016-03-24', 0);
	
insert into MyRestaurants 
	values('Pho Hoa', 'Pho', 8, '2015-11-24', null);

--Display in different formats (without header)

--comma separated values
.mode csv
select *
from MyRestaurants;

--list form delimited by "\"
.mode list
.separator '|'
select *
from MyRestaurants;

--column form, width 15
.width 15
.mode column
select *
from MyRestaurants;

--With header (same formats otherwise)
.headers on

.mode csv
select *
from MyRestaurants;

.mode list
select *
from MyRestaurants;

.mode column
select *
from MyRestaurants;

--Query: less than 20 minutes from home, order alphabetical order
select name, distance
from MyRestaurants
where distance < 20
order by name asc;

--Query: restaurants I like, have not visited since more than 3 months ago
select *
from MyRestaurants
where good == 1, date(visited) < date('now', '-3 month');